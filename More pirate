function love.load()
  
  background= love.graphics.newImage("sprites/bg.png")
  backgroundQuad = love.graphics.newQuad(1,1,720/2,1280/2,720/2,1280/2)
  
  flappy = love.graphics.newImage("sprites/flappy.png")
  
  playerShip = {}
	playerShip.x = 0	-- x,y coordinates of the hero
	playerShip.y = 450
	playerShip.width = 45
	playerShip.height = 45
	playerShip.speed = 300
  playerShip.speedSetting = 3
  playerShip.speedSettingValue = {-50,10,50,100,150}
  playerShip.rotationSpeed = 1
  playerShip.rotation = 0  
end

function love.update(dt)
  
  shipUpdate(dt)  
end

function shipUpdate(dt)
  
  playerShipUpdate(dt)
end

function playerShipUpdate(dt)
  
	if love.keyboard.isDown("d") then
		playerShip.rotation = playerShip.rotation + playerShip.rotationSpeed
    
    if playerShip.rotation > 360 then
      playerShip.rotation = 1
    end
  end
  if love.keyboard.isDown("a") then
		playerShip.rotation = playerShip.rotation - playerShip.rotationSpeed
    
    if playerShip.rotation < 0 then
      playerShip.rotation = 359
    end
  end
  
  playerShip.x, playerShip.y = angledShipMovement(playerShip.x, playerShip.y, playerShip.speed, playerShip.rotation, dt)
end

function angledShipMovement(posx, posy, speed, rotation, dt)
  
  rotation = rotation / 180
  rotation = rotation * 3.14
  posy = posy - (math.cos(rotation) * dt * playerShip.speedSettingValue[playerShip.speedSetting])
  posx = posx + (math.sin(rotation) * dt * playerShip.speedSettingValue[playerShip.speedSetting])
  return posx, posy
end

function love.draw()
  love.graphics.draw(background, backgroundQuad, 0, 0)
  game_screen()
end

function love.keyreleased(key)
  
	if (key == "w" and playerShip.speedSetting < 5) then
      playerShip.speedSetting = playerShip.speedSetting + 1
	end
  if (key == "s" and playerShip.speedSetting > 1) then
      playerShip.speedSetting = playerShip.speedSetting - 1
	end
end

function game_screen()

  love.graphics.draw(flappy, playerShip.x, playerShip.y, ((playerShip.rotation/180)*3.14), 1, 1 ,playerShip.width / 2, (playerShip.height / 2))  
  love.graphics.print(playerShip.rotation, 0, 0)
end

function CheckCollision(x1,y1,w1,h1, x2,y2,w2,h2)
  return x1 < x2+w2 and
         x2 < x1+w1 and
         y1 < y2+h2 and
         y2 < y1+h1
end
